{"version":3,"sources":["app/assets/logo.jpg","modules/auth.js","store.js","app/header.js","app/components/page/index.js","app/routes/homepage/index.js","app/routes/about/index.js","app/routes/not-found/index.js","app/routes/index.js","app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","auth","arguments","length","undefined","isServer","window","document","createElement","header","react_default","a","id","Link","to","SITE_URL","defaultImage","concat","logo","Page","pathname","title","_ref","description","image","contentType","twitter","noCrawl","published","updated","category","tags","theTitle","substring","theDescription","theImage","metaTags","itemprop","content","name","property","push","_this$props","this","props","children","className","rest","Object","objectWithoutProperties","Helmet_default","htmlAttributes","lang","itemscope","itemtype","schema","link","rel","href","location","meta","getMetaTags","Component","withRouter","homepage","page","src","alt","style","width","about","not_found","routes","Switch","Route","exact","path","component","Homepage","About","NotFound","App","history","createHistory","basename","process","store","url","createMemoryHistory","initialEntries","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","apply","applyMiddleware","__PRELOADED_STATE__","createStore","connectRouter","rootReducer","Application","es","connected_react_router_lib","react_frontload_lib","noServerRender","app_app","root","querySelector","hasChildNodes","Loadable","preloadReady","then","hydrate","render"],"mappings":"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","file":"static/js/main.51bfbf0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8caa15b8.jpg\";","const initialState = []\r\n\r\nexport default (state = initialState) => {\r\n  return state;\r\n};\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport thunk from 'redux-thunk';\r\nimport { createBrowserHistory, createMemoryHistory } from 'history';\r\nimport rootReducer from './modules/auth';\r\n\r\n// A nice helper to tell us if we're on the server\r\nexport const isServer = !(\r\n  typeof window !== 'undefined' &&\r\n  window.document &&\r\n  window.document.createElement\r\n);\r\n\r\nexport default (url = '/') => {\r\n  // Create a history depending on the environment\r\n  const history = isServer\r\n    ? createMemoryHistory({\r\n        initialEntries: [url]\r\n      })\r\n    : createBrowserHistory();\r\n\r\n  const enhancers = [];\r\n\r\n  // Dev tools are helpful\r\n  if (process.env.NODE_ENV === 'development' && !isServer) {\r\n    const devToolsExtension = window.devToolsExtension;\r\n\r\n    if (typeof devToolsExtension === 'function') {\r\n      enhancers.push(devToolsExtension());\r\n    }\r\n  }\r\n\r\n  const middleware = [thunk, routerMiddleware(history)];\r\n  const composedEnhancers = compose(\r\n    applyMiddleware(...middleware),\r\n    ...enhancers\r\n  );\r\n\r\n  // Do we have preloaded state available? Great, save it.\r\n  const initialState = !isServer ? window.__PRELOADED_STATE__ : {};\r\n\r\n  // Delete it once we have it stored in a variable\r\n  if (!isServer) {\r\n    delete window.__PRELOADED_STATE__;\r\n  }\r\n\r\n  // Create the store\r\n  const store = createStore(connectRouter(history)(rootReducer), initialState, composedEnhancers);\r\n\r\n  return {\r\n    store,\r\n    history\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default () => (\r\n  <header id=\"header\">\r\n    <h1 id=\"title\">My awesome website</h1>\r\n    <ul id=\"links\">\r\n      <li>\r\n        <Link to=\"/\">Homepage</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/about\">About</Link>\r\n      </li>\r\n      <li>\r\n        <Link to=\"/this-is-broken\">Broken Page</Link>\r\n      </li>\r\n    </ul>\r\n  </header>\r\n);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Helmet from 'react-helmet';\r\nimport logo from '../../assets/logo.jpg';\r\n\r\nconst SITE_URL =\r\n  process.env.NODE_ENV === 'development'\r\n    ? 'http://localhost:3000'\r\n    : 'https://cra-ssr.herokuapp.com';\r\n\r\nconst FACEBOOK_APP_ID = 'XXXXXXXXX';\r\n\r\nconst defaultTitle = 'My Website';\r\nconst defaultDescription =\r\n  'This is a really awesome website where we can render on the server. Supa cool.';\r\nconst defaultImage = `${SITE_URL}${logo}`;\r\nconst defaultTwitter = '@cereallarceny';\r\nconst defaultSep = ' | ';\r\n\r\nclass Page extends Component {\r\n  getMetaTags(\r\n    {\r\n      title,\r\n      description,\r\n      image,\r\n      contentType,\r\n      twitter,\r\n      noCrawl,\r\n      published,\r\n      updated,\r\n      category,\r\n      tags\r\n    },\r\n    pathname\r\n  ) {\r\n    const theTitle = title\r\n      ? (title + defaultSep + defaultTitle).substring(0, 60)\r\n      : defaultTitle;\r\n    const theDescription = description\r\n      ? description.substring(0, 155)\r\n      : defaultDescription;\r\n    const theImage = image ? `${SITE_URL}${image}` : defaultImage;\r\n\r\n    const metaTags = [\r\n      { itemprop: 'name', content: theTitle },\r\n      { itemprop: 'description', content: theDescription },\r\n      { itemprop: 'image', content: theImage },\r\n      { name: 'description', content: theDescription },\r\n      { name: 'twitter:card', content: 'summary_large_image' },\r\n      { name: 'twitter:site', content: defaultTwitter },\r\n      { name: 'twitter:title', content: theTitle },\r\n      { name: 'twitter:description', content: theDescription },\r\n      { name: 'twitter:creator', content: twitter || defaultTwitter },\r\n      { name: 'twitter:image:src', content: theImage },\r\n      { property: 'og:title', content: theTitle },\r\n      { property: 'og:type', content: contentType || 'website' },\r\n      { property: 'og:url', content: SITE_URL + pathname },\r\n      { property: 'og:image', content: theImage },\r\n      { property: 'og:description', content: theDescription },\r\n      { property: 'og:site_name', content: defaultTitle },\r\n      { property: 'fb:app_id', content: FACEBOOK_APP_ID }\r\n    ];\r\n\r\n    if (noCrawl) {\r\n      metaTags.push({ name: 'robots', content: 'noindex, nofollow' });\r\n    }\r\n\r\n    if (published) {\r\n      metaTags.push({ name: 'article:published_time', content: published });\r\n    }\r\n    if (updated) {\r\n      metaTags.push({ name: 'article:modified_time', content: updated });\r\n    }\r\n    if (category) {\r\n      metaTags.push({ name: 'article:section', content: category });\r\n    }\r\n    if (tags) {\r\n      metaTags.push({ name: 'article:tag', content: tags });\r\n    }\r\n\r\n    return metaTags;\r\n  }\r\n\r\n  render() {\r\n    const { children, id, className, ...rest } = this.props;\r\n\r\n    return (\r\n      <div id={id} className={className}>\r\n        <Helmet\r\n          htmlAttributes={{\r\n            lang: 'en',\r\n            itemscope: undefined,\r\n            itemtype: `http://schema.org/${rest.schema || 'WebPage'}`\r\n          }}\r\n          title={\r\n            rest.title ? rest.title + defaultSep + defaultTitle : defaultTitle\r\n          }\r\n          link={[\r\n            {\r\n              rel: 'canonical',\r\n              href: SITE_URL + this.props.location.pathname\r\n            }\r\n          ]}\r\n          meta={this.getMetaTags(rest, this.props.location.pathname)}\r\n        />\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React from 'react';\r\nimport Page from '../../components/page';\r\n\r\nimport logo from '../../assets/logo.jpg';\r\n\r\nexport default () => (\r\n  <Page id=\"homepage\">\r\n    <p>Here's our homepage. All are welcome.</p>\r\n    <img src={logo} alt=\"Homepage\" style={{ width: '400px' }} />\r\n  </Page>\r\n);\r\n","import React from 'react';\r\nimport Page from '../../components/page';\r\n\r\nexport default () => (\r\n  <Page id=\"about\" title=\"About\" description=\"This is about really cool stuff.\">\r\n    <p>What we're all about</p>\r\n  </Page>\r\n);\r\n","import React from 'react';\r\nimport Page from '../../components/page';\r\n\r\nexport default () => (\r\n  <Page\r\n    id=\"not-found\"\r\n    title=\"Not Found\"\r\n    description=\"This is embarrassing.\"\r\n    noCrawl\r\n  >\r\n    <p>Super embarrassing.</p>\r\n  </Page>\r\n);\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Homepage from './homepage';\r\nimport About from './about';\r\nimport NotFound from './not-found';\r\n\r\nexport default () => (\r\n  <Switch>\r\n    <Route exact path=\"/\" component={Homepage} />\r\n    <Route exact path=\"/about\" component={About} />\r\n    <Route component={NotFound} />\r\n  </Switch>\r\n);\r\n","// The basics\r\nimport React, { Component } from 'react';\r\n\r\nimport Header from './header';\r\nimport Routes from './routes';\r\n\r\nimport './app.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n        <Header />\r\n        <div id=\"content\">\r\n          <Routes />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport { render, hydrate } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport Loadable from 'react-loadable';\r\nimport { Frontload } from 'react-frontload';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport createStore from './store';\r\n\r\nimport createHistory from 'history/createBrowserHistory';\r\n\r\nimport App from './app/app';\r\nimport './index.css';\r\n\r\nconst history = createHistory({\r\n  basename: process.env.PUBLIC_URL,\r\n});\r\n\r\n// Create a store and get back itself and its history object\r\n// const { store, history } = createStore();\r\nconst { store } = createStore();\r\n\r\n// Running locally, we should run on a <ConnectedRouter /> rather than on a <StaticRouter /> like on the server\r\n// Let's also let React Frontload explicitly know we're not rendering on the server here\r\nconst Application = (\r\n  <Provider store={store}>\r\n    <ConnectedRouter history={history}>\r\n      <Frontload noServerRender={true}>\r\n        <App />\r\n      </Frontload>\r\n    </ConnectedRouter>\r\n  </Provider>\r\n);\r\n\r\nconst root = document.querySelector('#root');\r\n\r\nif (root.hasChildNodes() === true) {\r\n  // If it's an SSR, we use hydrate to get fast page loads by just\r\n  // attaching event listeners after the initial render\r\n  Loadable.preloadReady().then(() => {\r\n    hydrate(Application, root);\r\n  });\r\n} else {\r\n  // If we're not running on the server, just render like normal\r\n  render(Application, root);\r\n}\r\n"],"sourceRoot":""}