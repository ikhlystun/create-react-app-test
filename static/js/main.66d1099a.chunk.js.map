{"version":3,"sources":["App.js","index.js"],"names":["ModalSwitch","previousLocation","_this","props","location","nextProps","this","history","action","state","modal","isModal","react_default","a","createElement","Switch","Route","exact","path","component","Home","Gallery","Modal","React","Component","IMAGES","id","title","color","Thumbnail","_ref","style","width","height","background","Image","_ref2","Link","to","map","i","key","pathname","concat","_ref3","match","image","parseInt","params","back","e","stopPropagation","goBack","onClick","position","top","left","bottom","right","className","padding","border","type","ModalGallery","BrowserRouter","basename","process","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.66d1099a.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Switch, Route, Link } from \"react-router-dom\";\n\n// This example shows how to render two different screens\n// (or the same screen in a different context) at the same url,\n// depending on how you got there.\n//\n// Click the colors and see them full screen, then \"visit the\n// gallery\" and click on the colors. Note the URL and the component\n// are the same as before but now we see them inside a modal\n// on top of the old screen.\n\nclass ModalSwitch extends React.Component {\n  // We can pass a location to <Switch/> that will tell it to\n  // ignore the router's current location and use the location\n  // prop instead.\n  //\n  // We can also use \"location state\" to tell the app the user\n  // wants to go to `/img/2` in a modal, rather than as the\n  // main page, keeping the gallery visible behind it.\n  //\n  // Normally, `/img/2` wouldn't match the gallery at `/`.\n  // So, to get both screens to render, we can save the old\n  // location and pass it to Switch, so it will think the location\n  // is still `/` even though its `/img/2`.\n  previousLocation = this.props.location;\n\n  componentWillUpdate(nextProps) {\n    let { location } = this.props;\n\n    // set previousLocation if props.location is not modal\n    if (\n      nextProps.history.action !== \"POP\" &&\n      (!location.state || !location.state.modal)\n    ) {\n      this.previousLocation = this.props.location;\n    }\n  }\n\n  render() {\n    let { location } = this.props;\n\n    let isModal = !!(\n      location.state &&\n      location.state.modal &&\n      this.previousLocation !== location\n    ); // not initial render\n\n    return (\n      <div>\n        <Switch location={isModal ? this.previousLocation : location}>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/gallery\" component={Gallery} />\n          <Route path=\"/img/:id\" component={Modal} />\n          <Route component={() => (<div>404 Not found </div>)} />\n        </Switch>\n        {isModal ? <Route path=\"/img/:id\" component={Modal} /> : null}\n      </div>\n    );\n  }\n}\n\nconst IMAGES = [\n  { id: 0, title: \"Dark Orchid\", color: \"DarkOrchid\" },\n  { id: 1, title: \"Lime Green\", color: \"LimeGreen\" },\n  { id: 2, title: \"Tomato\", color: \"Tomato\" },\n  { id: 3, title: \"Seven Ate Nine\", color: \"#789\" },\n  { id: 4, title: \"Crimson\", color: \"Crimson\" }\n];\n\nfunction Thumbnail({ color }) {\n  return (\n    <div\n      style={{\n        width: 50,\n        height: 50,\n        background: color\n      }}\n    />\n  );\n}\n\nfunction Image({ color }) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: 400,\n        background: color\n      }}\n    />\n  );\n}\n\nfunction Home() {\n  return (\n    <div>\n      <Link to=\"/gallery\">Visit the Gallery</Link>\n      <h2>Featured Images</h2>\n      <ul>\n        <li>\n          <Link to=\"/img/2\">Tomato</Link>\n        </li>\n        <li>\n          <Link to=\"/img/4\">Crimson</Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nfunction Gallery() {\n  return (\n    <div>\n      {IMAGES.map(i => (\n        <Link\n          key={i.id}\n          to={{\n            pathname: `/img/${i.id}`,\n            // this is the trick!\n            state: { modal: true }\n          }}\n        >\n          <Thumbnail color={i.color} />\n          <p>{i.title}</p>\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nfunction Modal({ match, history }) {\n  let image = IMAGES[parseInt(match.params.id, 10)];\n\n  if (!image) return null;\n\n  let back = e => {\n    e.stopPropagation();\n    history.goBack();\n  };\n\n  return (\n    <div\n      onClick={back}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        background: \"rgba(0, 0, 0, 0.15)\"\n      }}\n    >\n      <div\n        className=\"modal\"\n        style={{\n          position: \"absolute\",\n          background: \"#fff\",\n          top: 25,\n          left: \"10%\",\n          right: \"10%\",\n          padding: 15,\n          border: \"2px solid #444\"\n        }}\n      >\n        <h1>{image.title}</h1>\n        <Image color={image.color} />\n        <button type=\"button\" onClick={back}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ModalGallery() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Route component={ModalSwitch} />\n    </BrowserRouter>\n  );\n}\n\nexport default ModalGallery;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}